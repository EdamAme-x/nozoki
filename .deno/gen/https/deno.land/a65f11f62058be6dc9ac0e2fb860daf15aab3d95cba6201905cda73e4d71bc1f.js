import init, { source, minify as minifyRaw, minify_html as minifyHTMLRaw } from "./wasm.js";
await init(source);
export var Language;
(function(Language) {
    Language["HTML"] = "html";
    Language["CSS"] = "css";
    Language["JS"] = "js";
    Language["JSON"] = "json";
})(Language || (Language = {}));
/**
 * Minifies the given code of the given language type.
 * @param language the language that is to be minified
 * @param code the code to minify
 * @returns the minified code
 */ export function minify(language, code) {
    return minifyRaw(language, code);
}
/**
 * Minifies the given html code with the options that specify if you want to minify CSS and/or JS.
 * @param code the html code string to minify
 * @param options the options that tell if you want to minify CSS and/or JS in the HTML
 * @returns the minified html code
 */ export function minifyHTML(code, options) {
    const { minifyCSS , minifyJS  } = {
        minifyCSS: false,
        minifyJS: false,
        ...options
    };
    return minifyHTMLRaw(code, minifyCSS, minifyJS);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImh0dHBzOi8vZGVuby5sYW5kL3gvbWluaWZpZXJAdjEuMS4xL21vZC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgaW5pdCwge1xuICBzb3VyY2UsXG4gIG1pbmlmeSBhcyBtaW5pZnlSYXcsXG4gIG1pbmlmeV9odG1sIGFzIG1pbmlmeUhUTUxSYXcsXG59IGZyb20gXCIuL3dhc20uanNcIjtcblxuYXdhaXQgaW5pdChzb3VyY2UpO1xuXG4vKiogQSBzcGVjaWZpYyBsYW5ndWFnZSB0eXBlLiAqL1xuZXhwb3J0IGVudW0gTGFuZ3VhZ2Uge1xuICBIVE1MID0gXCJodG1sXCIsXG4gIENTUyA9IFwiY3NzXCIsXG4gIEpTID0gXCJqc1wiLFxuICBKU09OID0gXCJqc29uXCIsXG59XG5cbi8qKlxuICogTWluaWZpZXMgdGhlIGdpdmVuIGNvZGUgb2YgdGhlIGdpdmVuIGxhbmd1YWdlIHR5cGUuXG4gKiBAcGFyYW0gbGFuZ3VhZ2UgdGhlIGxhbmd1YWdlIHRoYXQgaXMgdG8gYmUgbWluaWZpZWRcbiAqIEBwYXJhbSBjb2RlIHRoZSBjb2RlIHRvIG1pbmlmeVxuICogQHJldHVybnMgdGhlIG1pbmlmaWVkIGNvZGVcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIG1pbmlmeTxUIGV4dGVuZHMgTGFuZ3VhZ2UgfCBMb3dlcmNhc2U8a2V5b2YgdHlwZW9mIExhbmd1YWdlPj4oXG4gIGxhbmd1YWdlOiBULFxuICBjb2RlOiBzdHJpbmdcbikge1xuICByZXR1cm4gbWluaWZ5UmF3KGxhbmd1YWdlLCBjb2RlKTtcbn1cblxuLyoqIFRoZSBvcHRpb25zIGZvciBob3cgeW91IHdhbnQgdG8gbWluaWZ5IHRoZSBnaXZlbiBodG1sIGNvZGUuICovXG5leHBvcnQgaW50ZXJmYWNlIE1pbmlmeUhUTUxPcHRpb25zIHtcbiAgbWluaWZ5Q1NTOiBib29sZWFuO1xuICBtaW5pZnlKUzogYm9vbGVhbjtcbn1cblxuLyoqXG4gKiBNaW5pZmllcyB0aGUgZ2l2ZW4gaHRtbCBjb2RlIHdpdGggdGhlIG9wdGlvbnMgdGhhdCBzcGVjaWZ5IGlmIHlvdSB3YW50IHRvIG1pbmlmeSBDU1MgYW5kL29yIEpTLlxuICogQHBhcmFtIGNvZGUgdGhlIGh0bWwgY29kZSBzdHJpbmcgdG8gbWluaWZ5XG4gKiBAcGFyYW0gb3B0aW9ucyB0aGUgb3B0aW9ucyB0aGF0IHRlbGwgaWYgeW91IHdhbnQgdG8gbWluaWZ5IENTUyBhbmQvb3IgSlMgaW4gdGhlIEhUTUxcbiAqIEByZXR1cm5zIHRoZSBtaW5pZmllZCBodG1sIGNvZGVcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIG1pbmlmeUhUTUwoY29kZTogc3RyaW5nLCBvcHRpb25zPzogUGFydGlhbDxNaW5pZnlIVE1MT3B0aW9ucz4pIHtcbiAgY29uc3QgeyBtaW5pZnlDU1MsIG1pbmlmeUpTIH06IE1pbmlmeUhUTUxPcHRpb25zID0ge1xuICAgIG1pbmlmeUNTUzogZmFsc2UsXG4gICAgbWluaWZ5SlM6IGZhbHNlLFxuICAgIC4uLm9wdGlvbnMsXG4gIH07XG5cbiAgcmV0dXJuIG1pbmlmeUhUTUxSYXcoY29kZSwgbWluaWZ5Q1NTLCBtaW5pZnlKUyk7XG59XG4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxRQUNMLE1BQU0sRUFDTixVQUFVLFNBQVMsRUFDbkIsZUFBZSxhQUFhLFFBQ3ZCLFlBQVk7QUFFbkIsTUFBTSxLQUFLO1dBR0o7VUFBSyxRQUFRO0lBQVIsU0FDVixVQUFPO0lBREcsU0FFVixTQUFNO0lBRkksU0FHVixRQUFLO0lBSEssU0FJVixVQUFPO0dBSkcsYUFBQTtBQU9aOzs7OztDQUtDLEdBQ0QsT0FBTyxTQUFTLE9BQ2QsUUFBVyxFQUNYLElBQVksRUFDWjtJQUNBLE9BQU8sVUFBVSxVQUFVO0FBQzdCLENBQUM7QUFRRDs7Ozs7Q0FLQyxHQUNELE9BQU8sU0FBUyxXQUFXLElBQVksRUFBRSxPQUFvQyxFQUFFO0lBQzdFLE1BQU0sRUFBRSxVQUFTLEVBQUUsU0FBUSxFQUFFLEdBQXNCO1FBQ2pELFdBQVcsS0FBSztRQUNoQixVQUFVLEtBQUs7UUFDZixHQUFHLE9BQU87SUFDWjtJQUVBLE9BQU8sY0FBYyxNQUFNLFdBQVc7QUFDeEMsQ0FBQyJ9